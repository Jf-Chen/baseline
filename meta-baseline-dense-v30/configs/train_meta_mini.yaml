train_dataset: mini-imagenet
train_dataset_args: {split: train}
tval_dataset: mini-imagenet
tval_dataset_args: {split: test}
val_dataset: mini-imagenet
val_dataset_args: {split: val}

model: meta-baseline-dense
model_args:
    encoder: resnet12-wide-dense
    encoder_args: {}
    method: dense_match
    neighbor_k: 5
    batch_size : 2
    shot_num : 5
    num_classes : 5
# load_encoder: ./save/classifier_mini-imagenet_resnet12/epoch-last.pth
load_encoder: ./save/classifier_mini_none/epoch-last.pth

n_way: 5
n_shot: 5
n_query: 15
train_batches: 200
ep_per_batch: 2

max_epoch: 40 # 20
optimizer: sgd
optimizer_args: {lr: 0.001, weight_decay: 5.e-4,milestones:  [90],beta1: 0.5,step_size: 10,gamma: 0.5,scheduler_name: "MultiStepLR"}
# optimizer_args: {lr: 0.01, weight_decay: 5.e-4,milestones:  [],beta1: 0.5,step_size: 10,gamma: 0.1,scheduler_name: "StepLR"}
# 考虑到classifier用的是0.01,这里最好也从0.01开始，然后缩小到0.001

visualize_datasets: True


#--------添加的-------#
num_workers: 2
pin_memory : false
beta: 0.2
cutmix_prob: -1
#---------end---------#
